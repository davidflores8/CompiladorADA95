package compilador_ada95;

import java_cup.runtime.Symbol;
import javax.swing.JOptionPane;

%%

%unicode
%line
%column
%public
%cup
%state COMENTARIOS

%{
    String comentario="";
%}

LETRA = [a-zA-Z]
DIGITO = [0-9]+ 
ID = {LETRA}({LETRA}|{DIGITO}|_)*|_{LETRA}({LETRA}|{DIGITO}|_)*
COMA = ,
IGUAL = :=
PUNTOCOMA = ;
PARENTESISI = "("
PARENTESISD = ")"
ESPACIO = [" "]+
SALTOLINEA = \n|\r|\n\r|{ESPACIO}
OPREL = <|>|<=|>=|=
OPADICION = [+-]
OPMULTI = [*/]
IF = if
ENDIF = end{ESPACIO}if
THEN = then
INTEGER = INTEGER
CHAR = CHAR
BOOLEAN = BOOLEAN
LOOP = loop
ENDLOOP = end{ESPACIO}loop
WHILE = while
PROCEDURE = procedure
BEGIN = begin
END = end
IS = is
COMENTARIO = --


%%

<YYINITIAL>{
{PROCEDURE} {return new Symbol (sym.TK_PROCEDURE, yyline + 1, yycolumn +1 , yytext() ) ; }
{IS} {return new Symbol (sym.TK_IS, yyline + 1, yycolumn +1 , yytext() ) ; }
{BEGIN} {return new Symbol (sym.TK_BEGIN, yyline + 1, yycolumn +1 , yytext() ) ; }
{END} {return new Symbol (sym.TK_END, yyline + 1, yycolumn +1 , yytext() ) ; }
{IF} {System.out.println("Encontro un if - "+yytext());return new Symbol (sym.TK_IF, yyline + 1, yycolumn +1 , yytext() ) ; }
{PARENTESISI} {return new Symbol (sym.TK_PARENTESISI, yyline + 1, yycolumn +1 , yytext() ) ; }
{OPREL} {return new Symbol (sym.TK_OPREL, yyline + 1, yycolumn +1 , yytext() ) ; }
{DIGITO} {return new Symbol (sym.TK_DIGITO, yyline + 1, yycolumn +1 , yytext() ) ; }
{PARENTESISD} {return new Symbol (sym.TK_PARENTESISD, yyline + 1, yycolumn +1 , yytext() ) ; }
{THEN} {System.out.println("Encontro un then - "+yytext());return new Symbol (sym.TK_THEN, yyline + 1, yycolumn +1 , yytext() ) ; }
{ENDIF} {return new Symbol (sym.TK_ENDIF, yyline + 1, yycolumn +1 , yytext() ) ; }
{PUNTOCOMA} {return new Symbol (sym.TK_PUNTOCOMA, yyline + 1, yycolumn +1 , yytext() ) ; }
{IGUAL} {System.out.println("Encontro un igual");return new Symbol (sym.TK_IGUAL, yyline + 1, yycolumn +1 , yytext() ) ; }
{BOOLEAN} {System.out.println("Encontro un Boolean");return new Symbol (sym.TK_BOOLEAN, yyline + 1, yycolumn +1 , yytext() ) ; }
{INTEGER} {return new Symbol (sym.TK_INTEGER, yyline + 1, yycolumn +1 , yytext() ) ; }
{CHAR} {System.out.println("Encontro un char");return new Symbol (sym.TK_CHAR, yyline + 1, yycolumn +1 , yytext() ) ; }
{COMA} {return new Symbol (sym.TK_COMA, yyline + 1, yycolumn +1 , yytext() ) ; }
{LOOP} {return new Symbol (sym.TK_LOOP, yyline + 1, yycolumn +1 , yytext() ) ; }
{ENDLOOP} {return new Symbol (sym.TK_ENDLOOP, yyline + 1, yycolumn +1 , yytext() ) ; }
{WHILE} {return new Symbol (sym.TK_WHILE, yyline + 1, yycolumn +1 , yytext() ) ; }
{OPADICION} {return new Symbol (sym.TK_OPADICION, yyline + 1, yycolumn +1 , yytext() ) ; }
{OPMULTI} {return new Symbol (sym.TK_MULTI, yyline + 1, yycolumn +1 , yytext() ) ; }
//{ESPACIO} {return new Symbol (sym.TK_ESPACIO, yyline + 1, yycolumn +1 , yytext() ) ; }
{COMENTARIO} {yybegin(COMENTARIOS);}
{ID} {System.out.println("Encontro un id - "+yytext());return new Symbol (sym.TK_ID, yyline + 1, yycolumn +1 , yytext() ) ; }
{SALTOLINEA} {  }

.  {JOptionPane.showMessageDialog(null, "Error lexico en linea "+yyline +1 + " y columna "+yycolumn+" y en el texto:\n "+yytext());}
}


<COMENTARIOS>{
    
    . {comentario = comentario+yytext();}

    {SALTOLINEA} {System.out.println("Este es un comentario: "+comentario); comentario =" ";yybegin(YYINITIAL);}

}

