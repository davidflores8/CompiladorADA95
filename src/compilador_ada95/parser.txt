package compilador_ada95;
import java_cup.runtime.Symbol;

parser code {:

public void syntax_error (Symbol s){
    System.out.println("Error de sintaxis");
    System.out.println("Linea " +s.left);
    System.out.println("Columna " +s.right);
}

:} ;


terminal String TK_IF, TK_ELSE, TK_PARENTESISI, TK_PARENTESISD, TK_ID, TK_OPREL, TK_DIGITO, TK_LETRA, TK_THEN, TK_ENDIF, TK_PUNTOCOMA;
terminal String TK_IGUAL, TK_INTEGER, TK_BOOLEAN, TK_CHAR, TK_COMA, TK_LOOP, TK_ENDLOOP, TK_WHILE, TK_OPADICION, TK_MULTI;
terminal String TK_PROCEDURE, TK_IS, TK_BEGIN, TK_END, TK_TRUE, TK_FALSE, TK_COLON, TK_AND, TK_OR;

non terminal PROCEDURE, PROCEDURE_PRIME, WHILE, DECISION, ASIGNACIONES;
non terminal INTEGER, BOOLEAN, BP, CHAR, DECLARACIONES, DP, EXPRESIONES, EP;

start with PROCEDURE_PRIME;


PROCEDURE::= TK_PROCEDURE TK_ID TK_IS PROCEDURE_PRIME TK_BEGIN PROCEDURE_PRIME TK_END TK_ID TK_PUNTOCOMA ;

PROCEDURE_PRIME::= DECISION PROCEDURE_PRIME
                | DECLARACIONES PROCEDURE_PRIME
                | WHILE PROCEDURE_PRIME
                | ASIGNACIONES PROCEDURE_PRIME
                | PROCEDURE PROCEDURE_PRIME
                | 
                
;


DECISION ::= TK_IF TK_PARENTESISI EXPRESIONES TK_PARENTESISD TK_THEN PROCEDURE_PRIME TK_ENDIF TK_PUNTOCOMA ;


ASIGNACIONES ::= TK_ID TK_IGUAL TK_ID TK_PUNTOCOMA
               |TK_ID TK_IGUAL TK_ID TK_OPADICION TK_ID TK_PUNTOCOMA 
               |TK_ID TK_IGUAL TK_ID TK_OPADICION TK_DIGITO TK_PUNTOCOMA 
               |TK_ID TK_IGUAL TK_ID TK_MULTI TK_ID TK_PUNTOCOMA 
               |TK_ID TK_IGUAL TK_ID TK_MULTI TK_DIGITO TK_PUNTOCOMA
               |TK_ID TK_IGUAL TK_DIGITO TK_PUNTOCOMA
               |TK_ID TK_IGUAL TK_LETRA TK_PUNTOCOMA
;

//Ciclo while

WHILE ::= TK_WHILE TK_PARENTESISI EXPRESIONES TK_PARENTESISD TK_LOOP PROCEDURE_PRIME TK_ENDLOOP TK_PUNTOCOMA;

EXPRESIONES ::= EP
              | EP TK_OR EP
              | EP TK_AND EP
;

EP::= TK_ID TK_OPREL TK_ID 
    | TK_ID TK_OPREL TK_DIGITO 
    | TK_ID TK_OPREL TK_LETRA 
    | TK_DIGITO TK_OPREL TK_ID
    | TK_LETRA TK_OPREL TK_ID
;

//Declaraciones de variables

DECLARACIONES::= TK_ID TK_COMA TK_ID TK_COLON TK_INTEGER TK_PUNTOCOMA ;
                

